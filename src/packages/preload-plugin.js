import e from"@swup/plugin";import{queryAll as t,getCurrentUrl as s,Location as r}from"swup";class o extends e{constructor(e){void 0===e&&(e={}),super();const s=this;this.name="SwupPreloadPlugin",this.requires={swup:">=4"},this.defaults={throttle:5,preloadInitialPage:!0},this.preloadPromises=new Map,this.preload=function(e){try{return Promise.resolve(s.swup.fetchPage(e)).then(function(e){return Promise.resolve(s.swup.hooks.call("page:preload",{page:e})).then(function(){return e})})}catch(e){return Promise.reject(e)}},this.preloadLinks=()=>{t("[data-swup-preload], [data-swup-preload-all] a").forEach(e=>{this.swup.shouldIgnoreVisit(e.href,{el:e})||this.swup.preload(e.href)})},this.options={...this.defaults,...e}}mount(){const e=this.swup;e.options.cache?(e.hooks.create("page:preload"),e.hooks.create("link:hover"),e.preload=this.preload,e.preloadLinks=this.preloadLinks,this.mouseEnterDelegate=e.delegateEvent(e.options.linkSelector,"mouseenter",this.onMouseEnter.bind(this),{capture:!0}),this.touchStartDelegate=e.delegateEvent(e.options.linkSelector,"touchstart",this.onTouchStart.bind(this),{capture:!0}),this.on("page:view",this.onPageView),this.replace("page:load",this.onPageLoad),this.preloadLinks(),this.options.preloadInitialPage&&this.preload(s())):console.warn("SwupPreloadPlugin: swup cache needs to be enabled for preloading")}unmount(){this.swup.preload=null,this.swup.preloadLinks=null,this.preloadPromises.clear(),this.mouseEnterDelegate?.destroy(),this.touchStartDelegate?.destroy()}onPageView(){this.preloadLinks()}onPageLoad(e,t,s){const{url:r}=e.to;return this.preloadPromises.has(r)?this.preloadPromises.get(r):s(e,t)}deviceSupportsHover(){return window.matchMedia("(hover: hover)").matches}onMouseEnter(e){try{const t=this;if(e.target!==e.delegateTarget)return Promise.resolve();if(!t.deviceSupportsHover())return Promise.resolve();const s=e.delegateTarget;return t.swup.hooks.callSync("link:hover",{el:s,event:e}),t.preloadLink(s),Promise.resolve()}catch(e){return Promise.reject(e)}}onTouchStart(e){this.deviceSupportsHover()||this.preloadLink(e.delegateTarget)}preloadLink(e){const{url:t}=r.fromElement(e);if(this.swup.shouldIgnoreVisit(e.href,{el:e}))return;if(t===s())return;if(this.swup.cache.has(t))return;if(this.preloadPromises.has(t))return;if(this.preloadPromises.size>=this.options.throttle)return;const o=this.preload(t);o.catch(()=>{}).finally(()=>{this.preloadPromises.delete(t)}),this.preloadPromises.set(t,o)}}export{o as default};
//# sourceMappingURL=index.module.js.map
