import e from"@swup/plugin";import t from"morphdom";const n={INPUT:!0,TEXTAREA:!0,SELECT:!0},o={INPUT:!0,TEXTAREA:!0,OPTION:!0},r={"datetime-local":!0,"select-multiple":!0,"select-one":!0,color:!0,date:!0,datetime:!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,textarea:!0,time:!0,url:!0,week:!0},s=[(e,t)=>!(!o[e.tagName]&&e.isEqualNode(t)),(e,t)=>{const o=e.closest("[data-morph-persist]");if(!o&&n[(s=e).tagName]&&r[s.type]&&e===document.activeElement){const n={value:!0};return Array.from(t.attributes).forEach(t=>{n[t.name]||e.setAttribute(t.name,t.value)}),!1}var s;return!o}];class a extends e{constructor(e){super(),this.name="SwupMorphPlugin",this.requires={swup:">=4"},this.defaults={containers:[],updateCallbacks:[]},this.options={...this.defaults,...e}}mount(){this.before("content:replace",this.validateContainers,{priority:1}),this.on("content:replace",this.morphContainers)}validateContainers(e){e.containers=e.containers.filter(e=>!this.options.containers.includes(e))}morphContainers(e,n){let{page:o}=n;const r=this.getContainers(),a=this.getNewContainers(o),i=this.options.updateCallbacks||[];r.forEach((e,n)=>{let{element:o,selector:r}=e;const{element:l}=a[n];o&&l?function(e,n,o){void 0===o&&(o=[]);const r=[...s,...o];t(e,n,{onBeforeElUpdated:(e,t)=>function(e,t,n){return void 0===n&&(n=[]),!n.map(n=>"function"!=typeof n||n(e,t)).includes(!1)}(e,t,r)})}(o,l,i):console.warn(`SwupMorphPlugin: No container found for selector: ${r}`)})}getContainers(e){return void 0===e&&(e=document),this.options.containers.map(t=>({element:e.querySelector(t),selector:t}))}getNewContainers(e){let{html:t}=e;const n=(new DOMParser).parseFromString(t,"text/html");return this.getContainers(n)}}export{a as default};
//# sourceMappingURL=index.module.js.map
